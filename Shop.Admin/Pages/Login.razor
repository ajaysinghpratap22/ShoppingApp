@page "/login"
@using Shop.DataModel.CustomModels;
@using Shop.Admin.Services;
@inject IAdminPanelService adminPanelService;
@inject NavigationManager navManager;
<style>
 /* css part section*/
  .loginBox{
      font-family:'Open Sans',sans-serif;
      margin:0 auto 0 auto;
      width:100%;
      text-align:center;
      margin:20px 0px 20px 0px;
  }
  p{
      font-size:12px;
      text-decoration:none;
      color:#ffffff;
  }
  h1{
      font-size:1.5em;
      color:#525252;
  }
  .box{
      background: white;
      width:300px;
      border-radius:6px;
      margin: 0 auto 0 auto;
      padding:0px 0px 10px 0px;
      border: #2877e9 4px solid;
  }
    .email {
        background: #ffffff;
        border: #ccc 1px solid;
        border-bottom: #ccc 2px solid;
        padding: 8px;
        width: 250px;
        color: #525252;
        margin-top: 10px;
        font-size:1em;
        border-radius:4px;
    }
    .password {
        border-radius: 4px;
        background: #ecf0f1;
        border: #ccc 1px solid;
        padding:8px;
        width:250px;
        font-size:1em;
    }

</style>

<div style="min-height:400px;">
    @*Page design section*@
    <div class="loginBox">
        <div class="box">
            <br />
            <h1>Admin Panel</h1>
            @if(loginModel !=null)
            {
        <EditForm Model="@loginModel" OnValidSubmit="Login_Click">
            <DataAnnotationsValidator />
            <InputText type="email" name="email" class="email" placeholder="email" @bind-Value="loginModel.EmailId" autocomplete="off"/>
            <ValidationMessage For="@(()=>loginModel.EmailId)"></ValidationMessage>
            <InputText type="password" name="password" class="password" placeholder="password" @bind-Value="loginModel.Password"/>
            <ValidationMessage For="@(()=>loginModel.Password)"></ValidationMessage>
            <br /><br />
            <input type="submit" class="btn-primary" value="Login" />

        </EditForm>
            }

        </div>
        <div>
            <br />
            <br />
            <p style="color: #ff0000">
                <h4>@alertMessage</h4>
            </p>
        </div>

    </div>

</div>


@code {
    //coding section
    public LoginModel loginModel { get; set; }
    public string alertMessage { get; set; }

    protected override Task OnInitializedAsync()
    {
        loginModel = new LoginModel();
        return base.OnInitializedAsync();
    }
    private async Task Login_Click()
    {
        var response= await adminPanelService.AdminLogin(loginModel);
        if(response.Status == true)
        {
            navManager.NavigateTo("/");

        }
        else
        {
            alertMessage = response.Message;
        }

    }

}
